openapi: 3.0.0
info:
  title: QuantifiedSelf App Statement
  description: >
    <h3> Login Table Schema </h3> 
    <table>
      <thead>
        <tr>
          <th>Column Name</th>
          <th>Column Type</th>
          <th>Constraints</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>user_id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment</td>
        </tr>
        <tr>
          <td>username</td>
          <td>String</td>
          <td>Unique, Not Null</td>
        </tr>
        <tr>
          <td>password</td>
          <td>String</td>
          <td>Not Null</td>
        </tr>
      </tbody>
    </table>

    <h3> Tracker Table Schema </h3> 
    <table>
      <thead>
        <tr>
          <th>Column Name</th>
          <th>Column Type</th>
          <th>Constraints</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>tracker_id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment</td>
        </tr>
        <tr>
          <td>user_id</td>
          <td>Integer</td>
          <td>Foreign Key(user.user_id)</td>
        </tr>
        <tr>
          <td>tracker_name</td>
          <td>String</td>
          <td>Unique, Not Null</td>
        </tr>
        <tr>
          <td>description</td>
          <td>String</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>t_type</td>
          <td>String</td>
          <td>Not Null</td>
        </tr>         
      </tbody>
    </table>

    <h3> Log Table Schema </h3>
    <table>
      <thead>
        <tr>
          <th>Column Name</th>
          <th>Column Type</th>
          <th>Constraints</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>tracker_id</td>
          <td>Integer</td>
          <td>Primary Key, Foreign Key (tracker.tracker_id)</td>
        </tr>
        <tr>
          <td>options</td>
          <td>String</td>
          <td>Not Null</td>
        </tr>
      </tbody>
    </table>

    <h3> Setting Table Schema </h3> 
    <table>
      <thead>
        <tr>
          <th>Column Name</th>
          <th>Column Type</th>
          <th>Constraints</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>logger_id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment</td>
        </tr>
        <tr>
          <td>tracker_id</td>
          <td>Integer</td>
          <td>Foreign Key (tracker.tracker_id)</td>
        </tr>
        <tr>
          <td>t_value</td>
          <td>Integer</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>comments</td>
          <td>String</td>
          <td></td>
        </tr>
      </tbody>
    </table>

    <h3> Error Codes </h3> 
    <table>
      <thead>
        <tr>
          <th>Resource</th>
          <th>Error Code</th>
          <th>Message</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Login</td>
          <td>USER001</td>
          <td>Username is required and should be string.</td>
        </tr>
        <tr>
          <td>Login</td>
          <td>USER002</td>
          <td>Password is required and should be string.</td>
        </tr>
        <tr>
          <td>Tracker</td>
          <td>TRACKER001</td>
          <td>Tracker name is required and should be string.</td>
        </tr>
        <tr>
          <td>Tracker</td>
          <td>TRACKER002</td>
          <td>Tracker description is required and should be string.</td>
        </tr>
        <tr>
          <td>Tracker</td>
          <td>TRACKER003</td>
          <td>Tracker type is required.</td>
        </tr>
        <tr>
          <td>Log</td>
          <td>LOGGER001</td>
          <td>Tracker value is required and should be integer.</td>
        </tr>
        <tr>
          <td>Log</td>
          <td>LOGGER002</td>
          <td>Timestamp must be in the format 'YYYY-MM-DD hh:mm'.</td>
        </tr>
        <tr>
          <td>Log</td>
          <td>LOGGER003</td>
          <td>Comments must be string.</td>
        </tr>
        <tr>
          <td>Setting</td>
          <td>SETTING001</td>
          <td>Setting is required and should be string and have comma-separeted values.</td>
        </tr>
      </tbody>
    </table>

  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/
paths:
  /api/course/{course_id}:
    description: End point to read, update and delete a course resource with course_id = courseId.
    get:
      description: Operation to Read course resource.
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        "200":
          description: Request Successful
          content:
            application/json:
              schema:
                title: course object
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        "500":
          description: Internal Server Error
        "404":
          description: Course not found

    put:
      description: Operation to update the course resource.
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  example: Maths1
                course_code:
                  type: string
                  example: MA101
                course_description:
                  type: string
                  example: Course Description Example
      responses:
        "200":
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        "404":
          description: Course not found
        "500":
          description: Internal Server Error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        "200":
          description: Successfully Deleted
        "404":
          description: Course not found
        "500":
          description: Intenal Server Error

  /api/course:
    description: End point to create course resource
    post:
      description: Operation to create the course resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  example: Maths1
                course_code:
                  type: string
                  example: MA101
                course_description:
                  type: string
                  example: Course Description Example
      responses:
        "201":
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        "409":
          description: course_code already exist
        "500":
          description: Internal Server Error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
  /api/student/{student_id}:
    description: Url to read, update and delete the student resource.
    get:
      description: Operation to read student resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        "200":
          description: Request Successful
          content:
            application/json:
              schema:
                title: student object
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        "500":
          description: Internal server error
        "404":
          description: Student not found

    put:
      description: Operation to update the student resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Narendra
                last_name:
                  type: string
                  example: Mishra
                roll_number:
                  type: string
                  example: MA19M010
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        "404":
          description: Student not found
        "500":
          description: Internal Server Error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      responses:
        "200":
          description: Successfully Deleted
        "500":
          description: Internal Server Error
        "404":
          description: Student not found

  /api/student:
    description: Url to create student resource
    post:
      description: Operation to create the student resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Narendra
                last_name:
                  type: string
                  example: Mishra
                roll_number:
                  type: string
                  example: MA19M010
      responses:
        "201":
          description: Successfully Created
          content:
            application/json:
              schema:
                title: student object
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        "409":
          description: Student already exist
        "500":
          description: Internal Server Error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/student/{student_id}/course:
    description: Url to get the the list of enrollments a student with student_id is enrolled in.
    get:
      description: URL to get the list of enrollments, the student is enrolled in. This path belongs to the Enrollment table.
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      responses:
        "200":
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    enrollment_id:
                      type: integer
                      example: 10
                    student_id:
                      type: integer
                      example: 101
                    course_id:
                      type: integer
                      example: 201
        "400":
          description: Invalid Student Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        "404":
          description: Student is not enrolled in any course
        "500":
          description: Internal Server Error

    post:
      description: Add student enrollment aka enroll the student to the course. This path belongs to the Enrollment table.
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  example: 12345
      responses:
        "201":
          description: Enrollment successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    enrollment_id:
                      type: integer
                      example: 10
                    student_id:
                      type: integer
                      example: 101
                    course_id:
                      type: integer
                      example: 201
        "404":
          description: Student not found
        "500":
          description: Internal Server Error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/student/{student_id}/course/{course_id}:
    description: URL to delete enrollment of a student in a course. This path belongs to the Enrollment table.
    delete:
      description: URL to delete enrollment of the student in the course. This path belongs to the Enrollment table.
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: Successfully deleted
        "400":
          description: Invalid Student Id or Course Id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        "404":
          description: Enrollment for the student not found
        "500":
          description: Internal Server Error
